{"version":3,"sources":["index.js"],"names":["Game","props","maze","generateMaze","state","size","complextiy","visited","path","futureSize","futureComplexity","abort","side","arr","index","push","this","randomlySortArray","Array","fill","v","Vertex","connect","getConnections","length","aStar","a","b","key1","getKey","key2","Math","abs","floor","randomIndex","temp","currentIndex","random","start","end","heuristic","current","openSet","closedSet","forEach","element","vertex","distance","other","find","value","undefined","concat","findIndex","splice","indexOf","visualise","map","Promise","resolve","setTimeout","setState","aStarVisualised","complexity","className","Maze","mazeSize","Buttons","restart","regenerate","Sliders","changeSize","changeComplexity","React","Component","type","min","max","onInput","target","onClick","rows","i","cols","j","blocked","padding","window","innerHeight","borderStyle","style","key","connections","d","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fadafad.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nclass Game extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tconst complextiy = 30;\r\n\t\tconst size = 40;\r\n\t\tconst maze = this.generateMaze(size, complextiy);\r\n\t\tthis.state=(\r\n\t\t{\r\n\t\t\tsize: size,\r\n\t\t\tcomplextiy: complextiy,\r\n\t\t\tmaze: maze,\r\n\t\t\tvisited: [],\r\n\t\t\tpath: [],\r\n\t\t\tfutureSize: size,\r\n\t\t\tfutureComplexity: complextiy,\r\n\t\t\tabort: 2,\r\n\t\t});\r\n\t}\r\n\r\n\tgenerateMaze(side, complextiy)\r\n\t{\r\n\t\twhile(true){\r\n\t\t\tlet size = side*side;\r\n\t\t\tlet arr = [];\r\n\t\t\tfor (let index = 1; index < size-1; index++)\r\n\t\t\t{\r\n\t\t\t\tarr.push(index);\r\n\t\t\t}\r\n\t\t\tarr = this.randomlySortArray(arr);\r\n\t\t\tarr.push(arr[0]);\r\n\t\t\tarr[0]=size;\r\n\t\t\tarr.push(size);\r\n\r\n\t\t\tlet maze = Array(size).fill(null);\r\n\t\t\tfor (let index = 0; index < size; index++)\r\n\t\t\t{\r\n\t\t\t\tif(arr[index] < size*complextiy/100) continue;\r\n\t\t\t\tlet v = new Vertex(index);\r\n\t\t\t\tif(index % side !== 0 && maze[index-1]!==null)\r\n\t\t\t\t{\r\n\t\t\t\t\tv.connect(maze[index-1],1);\r\n\t\t\t\t\tmaze[index-1].connect(v,1);\r\n\t\t\t\t}\r\n\t\t\t\tif(index >= side && maze[index-side]!==null)\r\n\t\t\t\t{\r\n\t\t\t\t\tv.connect(maze[index-side],1);\r\n\t\t\t\t\tmaze[index-side].connect(v,1);\r\n\t\t\t\t}\r\n\t\t\t\tmaze[index] = v;\r\n\t\t\t}\r\n\t\t\tif(maze[0].getConnections().length===0&&maze[size-1].getConnections().length===0)continue;\r\n\t\t\tlet solution = this.aStar(maze[0], maze[size-1], (a, b)=>{\r\n\t\t\t\tlet key1 = a.getKey(), key2 = b.getKey();\r\n\t\t\t\treturn (Math.abs((key2%side)-(key1%side))+Math.abs(Math.floor(key2/side)-Math.floor(key1/side)))*2;\r\n\t\t\t});\r\n\t\t\tif(solution === null) continue;\r\n\t\t\treturn maze;\r\n\t\t}\r\n\t}\r\n\r\n\trandomlySortArray(arr)\r\n\t{\r\n\t\tlet currentIndex = arr.length, randomIndex, temp;\r\n\t\twhile(currentIndex>0)\r\n\t\t{\r\n\t\t\trandomIndex = Math.floor(Math.random()*(currentIndex));\r\n\t\t\tcurrentIndex--;\r\n\t\t\ttemp = arr[currentIndex];\r\n\t\t\tarr[currentIndex] = arr[randomIndex];\r\n\t\t\tarr[randomIndex] = temp;\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\r\n\taStar(start, end, heuristic)\r\n\t{\r\n\t\tlet openSet = [];\r\n\t\tlet closedSet = [];\r\n\r\n\t\tlet current;\r\n\t\tstart.getConnections().forEach(element => {\r\n\t\t\topenSet.push({\r\n\t\t\t\tvertex:element.vertex,\r\n\t\t\t\tdistance:element.distance,\r\n\t\t\t\tpath:[start, element[0]],\r\n\t\t\t});\r\n\t\t});\r\n\t\twhile(openSet.length>0)\r\n\t\t{\r\n\t\t\tcurrent = openSet[0];\r\n\t\t\tif(current.vertex === end)\r\n\t\t\t\treturn {distance:current.distance,path:current.path};\r\n\t\t\tcurrent.vertex.getConnections().forEach(element => {\r\n\t\t\t\tlet other = openSet.find((value)=>{return value.vertex===element.vertex;});\r\n\t\t\t\tif(other !== undefined)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(other.distance>current.distance+element.distance)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tother.distance = current.distance + element.distance;\r\n\t\t\t\t\t\tother.path = current.path.concat([element.vertex]);\r\n\t\t\t\t\t\tlet index = openSet.findIndex((value)=>{\r\n\t\t\t\t\t\t\treturn (value.distance+heuristic(value.vertex, end))>=(current.distance+element.distance+heuristic(element.vertex, end));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tindex = index===undefined?openSet.length-1:index;\r\n\t\t\t\t\t\topenSet.splice(openSet.indexOf(other),1);\r\n\t\t\t\t\t\topenSet.splice(index,0,other);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tother = closedSet.find((value)=>{return value.vertex===element.vertex;});\r\n\t\t\t\t\tif(other !== undefined)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(other.distance>current.distance+element.distance)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tother.distance = current.distance + element.distance;\r\n\t\t\t\t\t\t\tother.path = current.path.concat([element.vertex]);\r\n\t\t\t\t\t\t\tlet index = openSet.findIndex((value)=>{\r\n\t\t\t\t\t\t\t\treturn (value.distance+heuristic(value.vertex, end))>=(current.distance+element.distance+heuristic(element.vertex, end));\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tindex = index===undefined?openSet.length-1:index;\r\n\t\t\t\t\t\t\topenSet.splice(index,0,other);\r\n\t\t\t\t\t\t\tclosedSet.splice(closedSet.indexOf(other),1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet index = openSet.findIndex((value)=>{\r\n\t\t\t\t\t\t\treturn (value.distance+heuristic(value.vertex, end))>=(current.distance+element.distance+heuristic(element.vertex, end));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tindex = index===undefined?openSet.length-1:index;\r\n\t\t\t\t\t\topenSet.splice(index,0,{\r\n\t\t\t\t\t\t\tvertex: element.vertex,\r\n\t\t\t\t\t\t\tdistance: current.distance+element.distance,\r\n\t\t\t\t\t\t\tpath: current.path.concat([element.vertex]),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tclosedSet.push(current);\r\n\t\t\topenSet.splice(openSet.indexOf(current),1);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tasync aStarVisualised(start, end, heuristic)\r\n\t{\r\n\t\tlet openSet = [];\r\n\t\tlet closedSet = [];\r\n\r\n\t\tlet current;\r\n\t\tstart.getConnections().forEach(element => {\r\n\t\t\topenSet.push({\r\n\t\t\t\tvertex:element.vertex,\r\n\t\t\t\tdistance:element.distance,\r\n\t\t\t\tpath:[start, element.vertex],\r\n\t\t\t});\r\n\t\t});\r\n\t\twhile(openSet.length>0)\r\n\t\t{\r\n\t\t\tcurrent = openSet[0];\r\n\t\t\tif(current.vertex === end)\r\n\t\t\t{\r\n\t\t\t\tthis.visualise(closedSet.map((value)=>{return value.vertex;}), current.path);\r\n\t\t\t\treturn {distance:current.distance,path:current.path};\r\n\t\t\t}\r\n\t\t\tcurrent.vertex.getConnections().forEach(element => {\r\n\t\t\t\tlet other = openSet.find((value)=>{return value.vertex===element.vertex;});\r\n\t\t\t\tif(other !== undefined)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(other.distance>current.distance+element.distance)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tother.distance = current.distance + element.distance;\r\n\t\t\t\t\t\tother.path = current.path.concat([element.vertex]);\r\n\t\t\t\t\t\tlet index = openSet.findIndex((value)=>{\r\n\t\t\t\t\t\t\treturn (value.distance+heuristic(value.vertex, end))>=(current.distance+element.distance+heuristic(element.vertex, end));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tindex = index===undefined?openSet.length-1:index;\r\n\t\t\t\t\t\topenSet.splice(openSet.indexOf(other),1);\r\n\t\t\t\t\t\topenSet.splice(index,0,other);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tother = closedSet.find((value)=>{return value.vertex===element.vertex;});\r\n\t\t\t\t\tif(other !== undefined)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(other.distance>current.distance+element.distance)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tother.distance = current.distance + element.distance;\r\n\t\t\t\t\t\t\tother.path = current.path.concat([element.vertex]);\r\n\t\t\t\t\t\t\tlet index = openSet.findIndex((value)=>{\r\n\t\t\t\t\t\t\t\treturn (value.distance+heuristic(value.vertex, end))>=(current.distance+element.distance+heuristic(element.vertex, end));\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tindex = index===undefined?openSet.length-1:index;\r\n\t\t\t\t\t\t\topenSet.splice(index,0,other);\r\n\t\t\t\t\t\t\tclosedSet.splice(closedSet.indexOf(other),1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet index = openSet.findIndex((value)=>{\r\n\t\t\t\t\t\t\treturn (value.distance+heuristic(value.vertex, end))>=(current.distance+element.distance+heuristic(element.vertex, end));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tindex = index===undefined?openSet.length-1:index;\r\n\t\t\t\t\t\topenSet.splice(index,0,{\r\n\t\t\t\t\t\t\tvertex: element.vertex,\r\n\t\t\t\t\t\t\tdistance: current.distance+element.distance,\r\n\t\t\t\t\t\t\tpath: current.path.concat([element.vertex]),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tclosedSet.push(current);\r\n\t\t\topenSet.splice(openSet.indexOf(current),1);\r\n\r\n\t\t\tif(this.visualise(closedSet.map((value)=>{return value.vertex;}), current.path)===1)\r\n\t\t\t{\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tawait new Promise(resolve=>setTimeout(resolve, 20));\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvisualise(closedSet, path)\r\n\t{\r\n\t\tif(this.state!==undefined) \r\n\t\t{\r\n\t\t\tif(this.state.abort===1)\r\n\t\t\t{\r\n\t\t\t\tthis.abort();\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({visited:closedSet, path:path});\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tabort()\r\n\t{\r\n\t\tthis.setState({abort:2});\r\n\t}\r\n\r\n\theuristic(a, b)\r\n\t{\r\n\t\tlet key1 = a.getKey(), key2 = b.getKey();\r\n\t\treturn (Math.abs((key2%this.state.size)-(key1%this.state.size))+Math.abs(Math.floor(key2/this.state.size)-Math.floor(key1/this.state.size)))*2;\r\n\t}\r\n\r\n\tasync restart()\r\n\t{\r\n\t\tif(this.state.abort===0)\r\n\t\t{\r\n\t\t\tthis.setState({abort:1});\r\n\t\t\tdo{await new Promise(resolve=>setTimeout(resolve,10));}while(this.state.abort===1);\r\n\t\t}\r\n\t\tthis.setState({abort:0});\r\n\t\tconst maze = this.state.maze;\r\n\t\tthis.aStarVisualised(maze[0],maze[maze.length-1],(a,b)=>{return this.heuristic(a,b)});\r\n\t}\r\n\r\n\tasync regenerate()\r\n\t{\r\n\t\tif(this.state.abort===0)\r\n\t\t{\r\n\t\t\tthis.setState({abort:1});\r\n\t\t\tdo{await new Promise(resolve=>setTimeout(resolve,10));}while(this.state.abort===1);\r\n\t\t}\r\n\t\tconst maze = this.generateMaze(this.state.futureSize, this.state.futureComplexity);\r\n\t\tthis.setState({maze:maze,size:this.state.futureSize, complexity:this.state.futureComplexity, path:[],visited:[]});\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"gamemaze\">\r\n\t\t\t\t\t<Maze maze={this.state.maze} mazeSize={this.state.size} visited={this.state.visited} path={this.state.path}></Maze>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"options\">\r\n\t\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t\t<Buttons \r\n\t\t\t\t\t\t\trestart={()=>{this.restart()}}\r\n\t\t\t\t\t\t\tregenerate={()=>{this.regenerate()}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"sliders\">\r\n\t\t\t\t\t\t<Sliders \r\n\t\t\t\t\t\t\tcomplexity={this.state.futureComplexity} \r\n\t\t\t\t\t\t\tsize ={this.state.futureSize} \r\n\t\t\t\t\t\t\tchangeSize={(value)=>{this.setState({futureSize:value});}}\r\n\t\t\t\t\t\t\tchangeComplexity={(value)=>{this.setState({futureComplexity:value});}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Sliders extends React.Component\r\n{\r\n\trender()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"sizeslider, slidercontainer\">\r\n\t\t\t\t\t<label>Size:       </label>       \r\n\t\t\t\t\t<input type=\"range\" min=\"20\" max=\"60\" value={this.props.size} className=\"slider\" onInput={(value)=>{this.props.changeSize(value.target.value);}}/>\r\n\t\t\t\t\t<span>{this.props.size}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"complexityslider, slidercontainer\">\r\n\t\t\t\t\t<label>Complexity: </label>\r\n\t\t\t\t\t<input type=\"range\" min=\"20\" max=\"40\" value={this.props.complexity} className=\"slider\" onInput={(value)=>{this.props.changeComplexity(value.target.value);}}/>\r\n\t\t\t\t\t<span>{this.props.complexity}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Buttons extends React.Component\r\n{\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"buttoncontainer\">\r\n\t\t\t\t\t<input type=\"button\" value=\"Start\" className=\"button\" onClick={()=>this.props.restart()}></input>\r\n\t\t\t\t\t<input type=\"button\" value=\"Regenerate\" className=\"button\" onClick={()=>this.props.regenerate()}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Maze extends React.Component\r\n{\r\n\trender()\r\n\t{\r\n\t\tconst size = this.props.mazeSize;\r\n\t\tconst maze = this.props.maze;\r\n\t\tconst visited = this.props.visited;\r\n\t\tconst path = this.props.path;\r\n\t\tlet rows = [];\r\n\t\tfor (let i = 0; i < size; i++) \r\n\t\t{\r\n\t\t\tlet cols = []\r\n\t\t\tfor (let j = 0; j < size; j++) \r\n\t\t\t{\r\n\t\t\t\tlet blocked = maze[i*size+j]===null? 'blocked':'unfilled';\r\n\t\t\t\tif(visited.indexOf(maze[i*size+j])>-1) blocked = 'visited';\r\n\t\t\t\tif(path.indexOf(maze[i*size+j])>-1) blocked = 'path';\r\n\t\t\t\tif(i===0&&j===0) blocked = 'start';\r\n\t\t\t\tif(i===size-1&&j===size-1) blocked = 'end';\r\n\t\t\t\tlet padding = (window.innerHeight/3/size)+\"px\";\r\n\t\t\t\tlet borderStyle = \"none\";\r\n\t\t\t\tif(maze[i*size+j]===null)\r\n\t\t\t\t{\r\n\t\t\t\t\tpadding = \"\";\r\n\t\t\t\t\tborderStyle = \"\";\r\n\t\t\t\t\tif(i>0&&maze[(i-1)*size+j]===null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpadding+=(window.innerHeight/3/size+\"px \");\r\n\t\t\t\t\t\tborderStyle+=\"none \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpadding+=((window.innerHeight/3/size-2)+\"px \");\r\n\t\t\t\t\t\tborderStyle+=\"solid \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(j<(size-1)&&maze[(i)*size+j+1]===null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpadding+=(window.innerHeight/3/size+\"px \");\r\n\t\t\t\t\t\tborderStyle+=\"none \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpadding+=((window.innerHeight/3/size-2)+\"px \");\r\n\t\t\t\t\t\tborderStyle+=\"solid \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(i<(size-1)&&maze[(i+1)*size+j]===null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpadding+=(window.innerHeight/3/size+\"px \");\r\n\t\t\t\t\t\tborderStyle+=\"none \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpadding+=((window.innerHeight/3/size-2)+\"px \");\r\n\t\t\t\t\t\tborderStyle+=\"solid \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(j>0&&maze[(i)*size+j-1]===null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpadding+=(window.innerHeight/3/size+\"px \");\r\n\t\t\t\t\t\tborderStyle+=\"none \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpadding+=((window.innerHeight/3/size-2)+\"px \");\r\n\t\t\t\t\t\tborderStyle+=\"solid \";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcols.push(<td className={blocked} key={i*size+j} style={{padding:padding, borderStyle:borderStyle}}></td>);\r\n\t\t\t}\r\n\t\t\trows.push(<tr key={i}>{cols}</tr>);\r\n\t\t}\r\n\t\treturn(<table className=\"maze\"><tbody>{rows}</tbody></table>);\r\n\t}\r\n}\r\n\r\nclass Vertex\r\n{\r\n\tconstructor(key)\r\n\t{\r\n\t\tthis.key = key;\r\n\t\tthis.connections=[];\r\n\t}\r\n\r\n\tconnect(v, d)\r\n\t{\r\n\t\tthis.connections.push({\r\n\t\t\tvertex: v,\r\n\t\t\tdistance: d\r\n\t\t});\r\n\t}\r\n\r\n\tgetKey()\r\n\t{\r\n\t\treturn this.key;\r\n\t}\r\n\r\n\tgetConnections()\r\n\t{\r\n\t\treturn this.connections;\r\n\t}\r\n}\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));"],"sourceRoot":""}